name: Bash
on:
  workflow_call:
    inputs:
      os:
        type: string
      submodules:
        type: boolean
jobs:
  bash:
    runs-on: ${{ inputs.os }}
    env:
      CI_SCRIPT_PATH: ${{ inputs.submodules && './git-hooks/src/ci.sh' ||
        './src/ci.sh' }}
    steps:
      - name: Set Git autocrlf (Windows)
        if: ${{ inputs.os == 'windows-latest' }}
        run: git config --global core.autocrlf input
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          submodules: ${{ inputs.submodules }}

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'
          cache: false
      - name: Install shfmt
        run: |
          go install mvdan.cc/sh/v3/cmd/shfmt@latest
          shfmt --version

      - name: Install ShellCheck (macOS)
        if: ${{ inputs.os == 'macos-latest' }}
        run: |
          brew update
          brew install shellcheck
      - name: Install ShellCheck (Windows)
        if: ${{ inputs.os == 'windows-latest' }}
        run: choco install shellcheck
      - name: Get ShellCheck version
        run: shellcheck --version

      - name: Add npm local bin directory to GitHub Path (non-Windows)
        if: ${{ inputs.os != 'windows-latest' }}
        run: echo "$PWD/node_modules/.bin" >> $GITHUB_PATH
      - name: Add npm local bin directory to GitHub Path (Windows)
        if: ${{ inputs.os == 'windows-latest' }}
        run: >
          "$PWD/node_modules/.bin"
          | Out-File -FilePath $env:GITHUB_PATH -Append
      - name: Install Bats
        run: |
          npm install bats
          bats --version

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Get Python version
        run: python --version
      - name: Install packages
        if: ${{ !inputs.submodules }}
        run: |
          pip install --requirement './requirements-dev.txt'
          black --version
          pylint --version
          mypy --version
          isort --version
          coverage --version

      - name: Install markdownlint
        if: ${{ !inputs.submodules }}
        run: |
          npm install markdownlint-cli
          markdownlint --version

      - name: Install Bash (macOS)
        if: ${{ inputs.os == 'macos-latest' }}
        run: |
          brew update
          brew install bash
      - name: Get Bash version
        run: bash --version

      - name: Run shfmt
        shell: bash
        run: |
          source "$CI_SCRIPT_PATH"
          run_ci_bash_shfmt
      - name: Run ShellCheck
        shell: bash
        run: |
          source "$CI_SCRIPT_PATH"
          run_ci_bash_shellcheck
      - name: Run Bats
        shell: bash
        run: |
          source "$CI_SCRIPT_PATH"
          run_ci_bash_bats
